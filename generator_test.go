package ed448

import . "gopkg.in/check.v1"

func (s *Ed448Suite) Test_Generator2(c *C) {
	exp := &twExtendedPoint{
		&bigNumber{
			0xf60cbf0, 0x951dd8b,
			0xb95be9f, 0x6edc154,
			0x33b27bd, 0x3e874c2,
			0x93396f3, 0x226b974,
			0x6c0de1b, 0xb39e8db,
			0xdd03345, 0x24bd0b2,
			0x084fec7, 0x1bdc9d3,
			0xa45e70d, 0x4c294b0,
		},

		&bigNumber{
			0x013f68da, 0x0fabe907,
			0x0f0cca36, 0x0fce3a6c,
			0x02eea855, 0x06a23a65,
			0x0907f72d, 0x0abcc85d,
			0x0521cbab, 0x040fbd8d,
			0x032508dd, 0x0de49d9d,
			0x08062caa, 0x05fcdad4,
			0x01ed7dcc, 0x07c28ebc,
		},
		&bigNumber{
			0x024ab06c, 0x0865d048,
			0x0705c75d, 0x0b7defb5,
			0x07412720, 0x0bb05cdc,
			0x07fc3280, 0x0b045733,
			0x0b3926d2, 0x047ce638,
			0x09e2bace, 0x075ee9ae,
			0x0c09c85a, 0x0748c890,
			0x022e7a06, 0x02a399fb,
		},

		&bigNumber{
			0x05d0f6ed, 0x011ecbe7,
			0x03256e44, 0x0cd02a58,
			0x0b2e82ff, 0x06570f36,
			0x03de5fc5, 0x02cbe175,
			0x054f9829, 0x00d32009,
			0x07467779, 0x0e3854ae,
			0x02e16584, 0x01f0e8d3,
			0x08591bee, 0x032184d4,
		},
	}
	p := findGenerator()
	c.Assert(p.x, DeepEquals, exp.x)
	c.Assert(p.y, DeepEquals, exp.y)
	c.Assert(p.z, DeepEquals, exp.z)
	c.Assert(p.t, DeepEquals, exp.t)

}

func (s *Ed448Suite) Test_Generator2Elligator(c *C) {
	c.Skip("failing")
	exp := &twExtendedPoint{
		&bigNumber{
			0x0cf14237, 0x0ac97f43,
			0x0a9543bc, 0x0dc98db8,
			0x0bcca6a6, 0x07874a17,
			0x021af78f, 0x0fffa763,
			0x0cf2ac0b, 0x074f2a89,
			0x0f89f88d, 0x0356a31e,
			0x09f61e5a, 0x00c01083,
			0x0c84b7a5, 0x00bf3b5c,
		},

		&bigNumber{
			0x00c9a64c, 0x06b775bc,
			0x026148bb, 0x0ee0c3e1,
			0x0303aa98, 0x04fad09b,
			0x0efaf59d, 0x03008555,
			0x072a0bf6, 0x023bc0fa,
			0x0c52ee5b, 0x0f0f61f9,
			0x05cf8d7f, 0x0b8b7f38,
			0x018a4398, 0x06a9849a,
		},

		&bigNumber{
			0x014e2fce, 0x0198c24c,
			0x0b74b290, 0x0080f748,
			0x0fb60b6e, 0x08ab2f53,
			0x06c32b60, 0x06979188,
			0x0e87a66d, 0x087ecac7,
			0x0f354ebd, 0x035faebf,
			0x0e30d07f, 0x0c96f513,
			0x0fab82ed, 0x0da28e58,
		},

		&bigNumber{
			0x0702239a, 0x05c67537,
			0x0ce76a54, 0x0fae388e,
			0x034bcae9, 0x06b5fe3d,
			0x0d3c37ae, 0x09cac77d,
			0x0761a657, 0x0a02246f,
			0x06490757, 0x09448b04,
			0x05281bbe, 0x0e0bd3d4,
			0x0abc5ecb, 0x07c655f9,
		},
	}

	p, _ := findGeneratorElligator()
	c.Assert(p.x, DeepEquals, exp.x)
	c.Assert(p.y, DeepEquals, exp.y)
	c.Assert(p.z, DeepEquals, exp.z)
	c.Assert(p.t, DeepEquals, exp.t)

}
