package ed448

import (
	. "gopkg.in/check.v1"
)

func (s *Ed448Suite) TestBytesBasePointIsOnCurve(c *C) {
	c.Skip("This is not yet implemented.")
	gx := []byte{0x29, 0x7e, 0xa0, 0xea, 0x26, 0x92, 0xff, 0x1b, 0x4f, 0xaf, 0xf4, 0x60, 0x98, 0x45, 0x3a, 0x6a, 0x26, 0xad, 0xf7, 0x33, 0x24, 0x5f, 0x06, 0x5c, 0x3c, 0x59, 0xd0, 0x70, 0x9c, 0xec, 0xfa, 0x96, 0x14, 0x7e, 0xaa, 0xf3, 0x93, 0x2d, 0x94, 0xc6, 0x3d, 0x96, 0xc1, 0x70, 0x03, 0x3f, 0x4b, 0xa0, 0xc7, 0xf0, 0xde, 0x84, 0x0a, 0xed, 0x93, 0x9f}
	gy := []byte{0x13}
	curve := newBytesCurve()
	c.Assert(curve.isOnCurve(gx, gy), Equals, true)
}

func (s *Ed448Suite) TestSum(c *C) {
	c.Assert(
		sum([]byte{0x57, 0x0, 0x0, 0x0}, []byte{0x83, 0x0, 0x0, 0x0}),
		DeepEquals,
		[]byte{0xda, 0x0, 0x0, 0x0})

	c.Assert(
		sum([]byte{0x75, 0xbc, 0xd1, 0x5}, []byte{0x1, 0x0, 0x0, 0x0}),
		DeepEquals,
		[]byte{0x76, 0xbc, 0xd1, 0x5})
}

func (s *Ed448Suite) TestMul(c *C) {
	c.Assert(
		mul([]byte{0x57, 0x0, 0x0, 0x0}, []byte{0x83, 0x0, 0x0, 0x0}),
		DeepEquals,
		[]byte{0x85, 0x2c, 0x0, 0x0})

	c.Assert(
		mul([]byte{0x75, 0xbc, 0xd1, 0x5}, []byte{0x1, 0x0, 0x0, 0x0}),
		DeepEquals,
		[]byte{0x75, 0xbc, 0xd1, 0x5})
}
